% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CallableFunction.R
\name{CallableFunction}
\alias{CallableFunction}
\title{A \code{CallableFunction} class of objects}
\description{
A \code{CallableFunction} class of objects

A \code{CallableFunction} class of objects
}
\details{
Object that stores function name with it's arguments. Methods to get call and run it.
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{args}}{(read-only) \code{list} of arguments.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{CallableFunction$new()}}
\item \href{#method-run}{\code{CallableFunction$run()}}
\item \href{#method-get_call}{\code{CallableFunction$get_call()}}
\item \href{#method-refresh}{\code{CallableFunction$refresh()}}
\item \href{#method-set_args}{\code{CallableFunction$set_args()}}
\item \href{#method-get_args}{\code{CallableFunction$get_args()}}
\item \href{#method-set_arg_value}{\code{CallableFunction$set_arg_value()}}
\item \href{#method-get_possible_args}{\code{CallableFunction$get_possible_args()}}
\item \href{#method-clone}{\code{CallableFunction$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Create a new \code{CallableFunction} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CallableFunction$new(fun)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fun}}{(\code{function}) function to set up}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
new \code{CallableFunction} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-run"></a>}}
\subsection{Method \code{run()}}{
Run function
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CallableFunction$run(return = TRUE, args = NULL, try = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{return}}{(\code{logical}) whether to return an object}

\item{\code{args}}{(\code{NULL} or named \code{list}) dynamic arguments to function}

\item{\code{try}}{(\code{logical}) whether perform function evaluation inside \code{try} clause}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
nothing or output from function depending on \code{return} argument
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_call"></a>}}
\subsection{Method \code{get_call()}}{
Get function call with substituted arguments in \code{args}.
These arguments will not be stored in the object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CallableFunction$get_call(deparse = TRUE, args = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deparse}}{(\code{logical}) whether to return a deparsed version of call}

\item{\code{args}}{(\code{NULL} or named \code{list}) dynamic arguments to function}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{call} or \code{character} depending on \code{deparse} argument
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-refresh"></a>}}
\subsection{Method \code{refresh()}}{
Refresh call with function name and saved arguments
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CallableFunction$refresh()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
nothing
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_args"></a>}}
\subsection{Method \code{set_args()}}{
Set up function arguments
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CallableFunction$set_args(args)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{args}}{(\code{NULL} or named \code{list}) dynamic arguments to function}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
nothing
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_args"></a>}}
\subsection{Method \code{get_args()}}{
get the arguments a function gets called with
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CallableFunction$get_args()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
arguments the function gets called with
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_arg_value"></a>}}
\subsection{Method \code{set_arg_value()}}{
Set up single function argument with value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CallableFunction$set_arg_value(name, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{(\code{character}) argument name}

\item{\code{value}}{argument value}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
nothing
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_possible_args"></a>}}
\subsection{Method \code{get_possible_args()}}{
Get the arguments this call can run with
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CallableFunction$get_possible_args()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
character vector with the names of the arguments
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CallableFunction$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
