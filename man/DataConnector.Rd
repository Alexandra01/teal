% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DataConnector.R
\name{DataConnector}
\alias{DataConnector}
\title{A \code{DataConnector} is an R6 class}
\description{
A \code{DataConnector} is an R6 class

A \code{DataConnector} is an R6 class
}
\details{
that carries a shiny module that can return a \code{cdisc_data} object as
a \code{reactiveVal}.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{DataConnector$new()}}
\item \href{#method-get_server}{\code{DataConnector$get_server()}}
\item \href{#method-get_ui}{\code{DataConnector$get_ui()}}
\item \href{#method-launch}{\code{DataConnector$launch()}}
\item \href{#method-clone}{\code{DataConnector$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Create a new \code{DataConnector} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnector$new(ui, server)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ui}}{(\code{function}) ui function of a shiny module}

\item{\code{server}}{(\code{function}) A shiny module server function
that should return reactive value of type \code{cdisc_data}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
new \code{DataConnector} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_server"></a>}}
\subsection{Method \code{get_server()}}{
return the \code{server} function of the DataConnector
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnector$get_server()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_ui"></a>}}
\subsection{Method \code{get_ui()}}{
return the \code{ui} function of the DataConnector
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnector$get_ui(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{\code{character} shiny element id}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-launch"></a>}}
\subsection{Method \code{launch()}}{
Run simple application that uses its \code{ui} and \code{server} fields

Useful for debugging
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnector$launch(data = reactiveVal(NULL))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{reactiveVal to allow data handling inside server function}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An object that represents the app
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnector$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
