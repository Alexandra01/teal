% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DataConnection.R
\name{DatasetConnector}
\alias{DatasetConnector}
\alias{DataConnection}
\title{A \code{DataConnection} class of objects}
\description{
A \code{DataConnection} class of objects

A \code{DataConnection} class of objects
}
\details{
Objects of this class store the connection to a data source.
It can be a database or server (\code{RICE} or \code{SAICE}) connection.
}
\examples{
\dontrun{
open_fun <- callable_function(data.frame) # define opening function
open_fun$set_args(list(x = 1:5)) # define fixed arguments to opening function

close_fun <- callable_function(print) # define closing function
close_fun$set_args(list(x = "Hi there")) # define fixed arguments to closing function

x <- DataConnection$new() # define connection
x$set_ping_fun(ping_fun) # able to set an optional ping function - eg. rice::rice_session_active
x$set_open_fun(open_fun) # define opening function
x$set_close_fun(close_fun) # define closing function

x$set_open_args(args = list(y = letters[1:5])) # define additional arguments if necessary

x$open() # call opening function

x$open(args = list(x = 1:5, y = letters[1:5])) # able to call opening function with arguments

x$get_open_call() # check reroducible R code
# get data from connection via DataConnector$get_dataset()

x$close() # call closing function
}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-init}{\code{DataConnection$init()}}
\item \href{#method-open}{\code{DataConnection$open()}}
\item \href{#method-get_open_call}{\code{DataConnection$get_open_call()}}
\item \href{#method-close}{\code{DataConnection$close()}}
\item \href{#method-get_close_call}{\code{DataConnection$get_close_call()}}
\item \href{#method-set_open_fun}{\code{DataConnection$set_open_fun()}}
\item \href{#method-set_open_args}{\code{DataConnection$set_open_args()}}
\item \href{#method-set_close_fun}{\code{DataConnection$set_close_fun()}}
\item \href{#method-set_close_args}{\code{DataConnection$set_close_args()}}
\item \href{#method-refresh_calls}{\code{DataConnection$refresh_calls()}}
\item \href{#method-ping}{\code{DataConnection$ping()}}
\item \href{#method-set_ping_fun}{\code{DataConnection$set_ping_fun()}}
\item \href{#method-clone}{\code{DataConnection$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-init"></a>}}
\if{latex}{\out{\hypertarget{method-init}{}}}
\subsection{Method \code{init()}}{
Create a new \code{DataConnection} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$init()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
new \code{DataConnection} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-open"></a>}}
\if{latex}{\out{\hypertarget{method-open}{}}}
\subsection{Method \code{open()}}{
Open the connection.

Note that if the connection is already opened then it does nothing.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$open(args = NULL, silent = FALSE, try = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{args}}{(\code{NULL} or named \code{list}) additional arguments not set up previously}

\item{\code{silent}}{(\code{logical}) whether convert all "missing function" errors to messages}

\item{\code{try}}{(\code{logical}) whether perform function evaluation inside \code{try} clause}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
if \code{try = TRUE} then \code{try-error} on error, \code{NULL} otherwise
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_open_call"></a>}}
\if{latex}{\out{\hypertarget{method-get_open_call}{}}}
\subsection{Method \code{get_open_call()}}{
Get executed open connection call
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$get_open_call(deparse = TRUE, args = NULL, silent = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deparse}}{(\code{logical}) whether return deparsed form of a call}

\item{\code{args}}{(\code{NULL} or named \code{list}) additional arguments not set up previously}

\item{\code{silent}}{(\code{logical}) whether convert all "missing function" errors to messages}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
optionally deparsed \code{call} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-close"></a>}}
\if{latex}{\out{\hypertarget{method-close}{}}}
\subsection{Method \code{close()}}{
Close the connection.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$close(silent = FALSE, try = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{silent}}{(\code{logical}) whether convert all "missing function" errors to messages}

\item{\code{try}}{(\code{logical}) whether perform function evaluation inside \code{try} clause}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
if \code{try = TRUE} then \code{try-error} on error, \code{NULL} otherwise
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_close_call"></a>}}
\if{latex}{\out{\hypertarget{method-get_close_call}{}}}
\subsection{Method \code{get_close_call()}}{
Get executed close connection call
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$get_close_call(deparse = TRUE, silent = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deparse}}{(\code{logical}) whether return deparsed form of a call}

\item{\code{silent}}{(\code{logical}) whether convert all "missing function" errors to messages}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
optionally deparsed \code{call} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_open_fun"></a>}}
\if{latex}{\out{\hypertarget{method-set_open_fun}{}}}
\subsection{Method \code{set_open_fun()}}{
Set open connection function
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$set_open_fun(fun)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fun}}{(\code{CallableFunction}) function to open connection}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
nothing
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_open_args"></a>}}
\if{latex}{\out{\hypertarget{method-set_open_args}{}}}
\subsection{Method \code{set_open_args()}}{
Set open connection function argument
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$set_open_args(args, silent = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{args}}{(\code{NULL} or named \code{list}) with values where list names are argument names}

\item{\code{silent}}{(\code{logical}) whether convert all "missing function" errors to messages}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
nothing
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_close_fun"></a>}}
\if{latex}{\out{\hypertarget{method-set_close_fun}{}}}
\subsection{Method \code{set_close_fun()}}{
Set close connection function
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$set_close_fun(fun)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fun}}{(\code{CallableFunction}) function to close connection}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
nothing
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_close_args"></a>}}
\if{latex}{\out{\hypertarget{method-set_close_args}{}}}
\subsection{Method \code{set_close_args()}}{
Set close connection function argument
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$set_close_args(args, silent = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{args}}{(named \code{list}) with values where list names are argument names}

\item{\code{silent}}{(\code{logical}) whether convert all "missing function" errors to messages}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
nothing
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-refresh_calls"></a>}}
\if{latex}{\out{\hypertarget{method-refresh_calls}{}}}
\subsection{Method \code{refresh_calls()}}{
Refresh both open and close calls
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$refresh_calls()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
nothing
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ping"></a>}}
\if{latex}{\out{\hypertarget{method-ping}{}}}
\subsection{Method \code{ping()}}{
ping the connection.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$ping()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
logical
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_ping_fun"></a>}}
\if{latex}{\out{\hypertarget{method-set_ping_fun}{}}}
\subsection{Method \code{set_ping_fun()}}{
Set a ping function
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$set_ping_fun(fun)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fun}}{(\code{CallableFunction}) function to ping connection}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
nothing
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
