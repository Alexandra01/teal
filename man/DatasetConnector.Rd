% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DataConnection.R, R/DatasetConnector.R
\name{DatasetConnector}
\alias{DatasetConnector}
\alias{DataConnection}
\title{A \code{DataConnection} class of objects}
\description{
A \code{DataConnection} class of objects

A \code{DataConnection} class of objects

A \code{DatasetConnector} class of objects

A \code{DatasetConnector} class of objects
}
\details{
Objects of this class store the connection to a data source.
It can be a database or server (\code{RICE} or \code{SAICE}) connection.

Deprecation note: will be removed by start of June 2020

Objects of this class store connection function to single dataset. Note that for some specific connection type
(e.g. \code{RAICE} or \code{SAICE}), pre-requisite object of class \code{DataConnection} is required.
Data can be pulled via \code{pull} method and returned via \code{get_dataset} method.
}
\examples{
\dontrun{
open_fun <- callable_function(data.frame)  # define opening function
open_fun$set_args(list(x = 1:5))   # define fixed arguments to opening function

close_fun <- callable_function(print) # define closing function
close_fun$set_args(list(x = "Hi there"))  # define fixed arguments to closing function

x <- DataConnection$new() # define connection
x$set_open_fun(open_fun) # define opening function
x$set_close_fun(close_fun) # define closing function

x$set_open_args(args = list(y = letters[1:5])) # define additional arguments if necessary

x$open() # call opening function

x$open(args = list(x = 1:5, y = letters[1:5])) # able to call opening function with arguments

x$get_open_call() # check reroducible R code
# get data from connection via DataConnector$get_dataset()

x$close() # call closing function
}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-init}{\code{DataConnection$init()}}
\item \href{#method-open}{\code{DataConnection$open()}}
\item \href{#method-get_open_call}{\code{DataConnection$get_open_call()}}
\item \href{#method-close}{\code{DataConnection$close()}}
\item \href{#method-get_close_call}{\code{DataConnection$get_close_call()}}
\item \href{#method-set_open_fun}{\code{DataConnection$set_open_fun()}}
\item \href{#method-set_open_args}{\code{DataConnection$set_open_args()}}
\item \href{#method-set_close_fun}{\code{DataConnection$set_close_fun()}}
\item \href{#method-set_close_args}{\code{DataConnection$set_close_args()}}
\item \href{#method-refresh_calls}{\code{DataConnection$refresh_calls()}}
\item \href{#method-clone}{\code{DataConnection$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-init"></a>}}
\subsection{Method \code{init()}}{
Create a new \code{DataConnection} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$init()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
new \code{DataConnection} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-open"></a>}}
\subsection{Method \code{open()}}{
Open the connection.

Note that if the connection is already opened then it does nothing.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$open(args = NULL, silent = FALSE, try = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{args}}{(\code{NULL} or named \code{list}) additional arguments not set up previously}

\item{\code{silent}}{(\code{logical}) whether convert all "missing function" errors to messages}

\item{\code{try}}{(\code{logical}) whether perform function evaluation inside \code{try} clause}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
if \code{try = TRUE} then \code{try-error} on error, \code{NULL} otherwise
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_open_call"></a>}}
\subsection{Method \code{get_open_call()}}{
Get executed open connection call
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$get_open_call(deparse = TRUE, args = NULL, silent = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deparse}}{(\code{logical}) whether return deparsed form of a call}

\item{\code{args}}{(\code{NULL} or named \code{list}) additional arguments not set up previously}

\item{\code{silent}}{(\code{logical}) whether convert all "missing function" errors to messages}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
optionally deparsed \code{call} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-close"></a>}}
\subsection{Method \code{close()}}{
Close the connection.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$close(silent = FALSE, try = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{silent}}{(\code{logical}) whether convert all "missing function" errors to messages}

\item{\code{try}}{(\code{logical}) whether perform function evaluation inside \code{try} clause}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
if \code{try = TRUE} then \code{try-error} on error, \code{NULL} otherwise
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_close_call"></a>}}
\subsection{Method \code{get_close_call()}}{
Get executed close connection call
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$get_close_call(deparse = TRUE, silent = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deparse}}{(\code{logical}) whether return deparsed form of a call}

\item{\code{silent}}{(\code{logical}) whether convert all "missing function" errors to messages}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
optionally deparsed \code{call} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_open_fun"></a>}}
\subsection{Method \code{set_open_fun()}}{
Set open connection function
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$set_open_fun(fun)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fun}}{(\code{CallableFunction}) function to open connection}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
nothing
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_open_args"></a>}}
\subsection{Method \code{set_open_args()}}{
Set open connection function argument
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$set_open_args(args, silent = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{args}}{(\code{NULL} or named \code{list}) with values where list names are argument names}

\item{\code{silent}}{(\code{logical}) whether convert all "missing function" errors to messages}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
nothing
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_close_fun"></a>}}
\subsection{Method \code{set_close_fun()}}{
Set close connection function
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$set_close_fun(fun)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fun}}{(\code{CallableFunction}) function to close connection}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
nothing
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_close_args"></a>}}
\subsection{Method \code{set_close_args()}}{
Set close connection function argument
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$set_close_args(args, silent = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{args}}{(named \code{list}) with values where list names are argument names}

\item{\code{silent}}{(\code{logical}) whether convert all "missing function" errors to messages}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
nothing
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-refresh_calls"></a>}}
\subsection{Method \code{refresh_calls()}}{
Refresh both open and close calls
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$refresh_calls()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
nothing
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DataConnection$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{DatasetConnector$new()}}
\item \href{#method-get_call}{\code{DatasetConnector$get_call()}}
\item \href{#method-get_dataset}{\code{DatasetConnector$get_dataset()}}
\item \href{#method-get_dataname}{\code{DatasetConnector$get_dataname()}}
\item \href{#method-get_keys}{\code{DatasetConnector$get_keys()}}
\item \href{#method-get_path}{\code{DatasetConnector$get_path()}}
\item \href{#method-pull}{\code{DatasetConnector$pull()}}
\item \href{#method-set_dataname}{\code{DatasetConnector$set_dataname()}}
\item \href{#method-set_keys}{\code{DatasetConnector$set_keys()}}
\item \href{#method-set_path}{\code{DatasetConnector$set_path()}}
\item \href{#method-set_pull_arg_value}{\code{DatasetConnector$set_pull_arg_value()}}
\item \href{#method-set_pull_args}{\code{DatasetConnector$set_pull_args()}}
\item \href{#method-set_pull_fun}{\code{DatasetConnector$set_pull_fun()}}
\item \href{#method-clone}{\code{DatasetConnector$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Create a new \code{DatasetConnector} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetConnector$new()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
new \code{DatasetConnector} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_call"></a>}}
\subsection{Method \code{get_call()}}{
Get executed call
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetConnector$get_call(deparse = TRUE, args = NULL, silent = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deparse}}{(\code{logical}) whether return deparsed form of a call}

\item{\code{args}}{(\code{NULL} or named \code{list}) additional dynamic arguments for pull function}

\item{\code{silent}}{(\code{logical}) whether convert all "missing function" errors to messages}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
optionally deparsed \code{call} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_dataset"></a>}}
\subsection{Method \code{get_dataset()}}{
Get the data from connection

Pull (if it is not already pulled) and return data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetConnector$get_dataset(args = NULL, silent = FALSE, try = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{args}}{(\code{NULL} or named \code{list}) additional dynamic arguments for pull function}

\item{\code{silent}}{(\code{logical}) whether convert all "missing function" errors to messages}

\item{\code{try}}{(\code{logical}) whether perform function evaluation inside \code{try} clause}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
if \code{try = TRUE} then \code{try-error} on error, object returned from connection function
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_dataname"></a>}}
\subsection{Method \code{get_dataname()}}{
Get connection dataname
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetConnector$get_dataname()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(\code{character}) connection data dataname
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_keys"></a>}}
\subsection{Method \code{get_keys()}}{
Get keys of the dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetConnector$get_keys()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(\code{list}) of keys
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_path"></a>}}
\subsection{Method \code{get_path()}}{
Get path of the dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetConnector$get_path()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(\code{character})
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-pull"></a>}}
\subsection{Method \code{pull()}}{
Pull the data

Force execution of connection function
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetConnector$pull(args = NULL, silent = FALSE, try = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{args}}{(\code{NULL} or named \code{list}) additional dynamic arguments for pull function}

\item{\code{silent}}{(\code{logical}) whether convert all "missing function" errors to messages}

\item{\code{try}}{(\code{logical}) whether perform function evaluation inside \code{try} clause}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
nothing, in order to get the data please use \code{get_dataset} method
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_dataname"></a>}}
\subsection{Method \code{set_dataname()}}{
Set dataname
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetConnector$set_dataname(dataname)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character}) dataname}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
nothing
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_keys"></a>}}
\subsection{Method \code{set_keys()}}{
Set dataset keys
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetConnector$set_keys(keys)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keys}}{(\code{keys}) object}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
nothing
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_path"></a>}}
\subsection{Method \code{set_path()}}{
Set connection path
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetConnector$set_path(path)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{(\code{character}) path}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
nothing
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_pull_arg_value"></a>}}
\subsection{Method \code{set_pull_arg_value()}}{
Set connection function single argument with value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetConnector$set_pull_arg_value(name, value, silent = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{(\code{character}) function argument name}

\item{\code{value}}{value to pass as a \code{name}}

\item{\code{silent}}{(\code{logical}) whether convert all "missing function" errors to messages}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
nothing
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_pull_args"></a>}}
\subsection{Method \code{set_pull_args()}}{
Set connection function arguments with values
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetConnector$set_pull_args(args, silent = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{args}}{(\code{NULL} or named \code{list}) with values where list names are argument names}

\item{\code{silent}}{(\code{logical}) whether convert all "missing function" errors to messages}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
nothing
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_pull_fun"></a>}}
\subsection{Method \code{set_pull_fun()}}{
Set the pulling function, which itself defines the connection through which the data gets pulled.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetConnector$set_pull_fun(fun)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fun}}{(\code{CallableFunction}) function to pull the data

 @return nothing}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DatasetConnector$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
