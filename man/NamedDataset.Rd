% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NamedDataset.R
\name{NamedDataset}
\alias{NamedDataset}
\title{R6 Class representing a dataset including code}
\description{
Any \code{data.frame} or \code{rtable} object can be
stored inside this object. Additionally there needs
to be the code that was used to generate this object.
additionally it is possible to label the data set
by handing over a \code{label} argument to the
\code{new} method
}
\examples{
named_data <- teal:::NamedDataset$new(
  x = data.frame(x = c(2, 2), y = c("a", "b"), stringsAsFactors = FALSE),
  dataname = "XY",
  code = "XY <- data.frame(x = c(2, 2),
    y = c('a', 'b'), stringsAsFactors = FALSE)"
)
named_data$ncol
named_data$get_code()
named_data$get_dataname()
}
\section{Super class}{
\code{\link[teal:RawDataset]{teal::RawDataset}} -> \code{NamedDataset}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{dataname}}{for backwards compatibility}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{NamedDataset$new()}}
\item \href{#method-get_dataname}{\code{NamedDataset$get_dataname()}}
\item \href{#method-set_dataname}{\code{NamedDataset$set_dataname()}}
\item \href{#method-get_datanames}{\code{NamedDataset$get_datanames()}}
\item \href{#method-get_dataset_label}{\code{NamedDataset$get_dataset_label()}}
\item \href{#method-set_dataset_label}{\code{NamedDataset$set_dataset_label()}}
\item \href{#method-get_code}{\code{NamedDataset$get_code()}}
\item \href{#method-get_code_class}{\code{NamedDataset$get_code_class()}}
\item \href{#method-mutate}{\code{NamedDataset$mutate()}}
\item \href{#method-set_vars}{\code{NamedDataset$set_vars()}}
\item \href{#method-set_code}{\code{NamedDataset$set_code()}}
\item \href{#method-check}{\code{NamedDataset$check()}}
\item \href{#method-clone}{\code{NamedDataset$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDataset" data-id="get_character_colnames">}\href{../../teal/html/RawDataset.html#method-get_character_colnames}{\code{teal::RawDataset$get_character_colnames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDataset" data-id="get_colnames">}\href{../../teal/html/RawDataset.html#method-get_colnames}{\code{teal::RawDataset$get_colnames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDataset" data-id="get_column_labels">}\href{../../teal/html/RawDataset.html#method-get_column_labels}{\code{teal::RawDataset$get_column_labels()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDataset" data-id="get_factor_colnames">}\href{../../teal/html/RawDataset.html#method-get_factor_colnames}{\code{teal::RawDataset$get_factor_colnames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDataset" data-id="get_numeric_colnames">}\href{../../teal/html/RawDataset.html#method-get_numeric_colnames}{\code{teal::RawDataset$get_numeric_colnames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDataset" data-id="get_raw_data">}\href{../../teal/html/RawDataset.html#method-get_raw_data}{\code{teal::RawDataset$get_raw_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDataset" data-id="get_row_labels">}\href{../../teal/html/RawDataset.html#method-get_row_labels}{\code{teal::RawDataset$get_row_labels()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDataset" data-id="get_rownames">}\href{../../teal/html/RawDataset.html#method-get_rownames}{\code{teal::RawDataset$get_rownames()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDataset" data-id="is_pulled">}\href{../../teal/html/RawDataset.html#method-is_pulled}{\code{teal::RawDataset$is_pulled()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
initialize a \code{NamedDataset} class object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDataset$new(
  x,
  dataname,
  code = character(0),
  label = character(0),
  vars = list()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{(\code{data.frame})}

\item{\code{dataname}}{(\code{character}) A given name for the dataset
it may not contain spaces}

\item{\code{code}}{(\code{character}) A character string defining the code
needed to produce the data set in \code{x}}

\item{\code{label}}{(\code{character}) Label to describe the dataset}

\item{\code{vars}}{(list)\cr
In case when this object code depends on the \code{raw_data} from the other
\code{NamedDataset}, \code{NamedDatasetConnector} object(s) or other constant value,
this/these object(s) should be included}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
new \code{NamedDataset} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_dataname"></a>}}
\if{latex}{\out{\hypertarget{method-get_dataname}{}}}
\subsection{Method \code{get_dataname()}}{
Derive the \code{name} which was formerly called \code{dataname}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDataset$get_dataname()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character} name of the dataset
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_dataname"></a>}}
\if{latex}{\out{\hypertarget{method-set_dataname}{}}}
\subsection{Method \code{set_dataname()}}{
Set the name for the dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDataset$set_dataname(dataname)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character}) the new name}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{self} invisibly for chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_datanames"></a>}}
\if{latex}{\out{\hypertarget{method-get_datanames}{}}}
\subsection{Method \code{get_datanames()}}{
Derive the dataname
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDataset$get_datanames()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character} name of the dataset
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_dataset_label"></a>}}
\if{latex}{\out{\hypertarget{method-get_dataset_label}{}}}
\subsection{Method \code{get_dataset_label()}}{
Derive the \code{label} which was former called \code{datalabel}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDataset$get_dataset_label()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character} label of the dataset
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_dataset_label"></a>}}
\if{latex}{\out{\hypertarget{method-set_dataset_label}{}}}
\subsection{Method \code{set_dataset_label()}}{
Set the label for the dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDataset$set_dataset_label(label)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{label}}{(\code{character}) the new label}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{self} invisibly for chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_code"></a>}}
\if{latex}{\out{\hypertarget{method-get_code}{}}}
\subsection{Method \code{get_code()}}{
Get code to get data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDataset$get_code(deparse = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deparse}}{(\code{logical}) whether return deparsed form of a call}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
optionally deparsed \code{call} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_code_class"></a>}}
\if{latex}{\out{\hypertarget{method-get_code_class}{}}}
\subsection{Method \code{get_code_class()}}{
Get internal \code{CodeClass} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDataset$get_code_class()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{CodeClass}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mutate"></a>}}
\if{latex}{\out{\hypertarget{method-mutate}{}}}
\subsection{Method \code{mutate()}}{
Mutate dataset by code

Either code or script must be provided, but not both.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDataset$mutate(code, vars = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{code}}{(\code{character}) Code to mutate the dataset. Must contain the
\code{dataset$dataname}}

\item{\code{vars}}{(list)\cr
In case when this object code depends on the \code{raw_data} from the other
\code{RelationalDataset}, \code{RelationalDatasetConnector} object(s) or other constant value,
this/these object(s) should be included}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
self invisibly for chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_vars"></a>}}
\if{latex}{\out{\hypertarget{method-set_vars}{}}}
\subsection{Method \code{set_vars()}}{
Adds variables which code depends on
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDataset$set_vars(vars)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{vars}}{(list)\cr
  In case when this object code depends on the \code{raw_data} from the other
  \code{RelationalDataset}, \code{RelationalDatasetConnector} object(s) or other constant value,
  this/these object(s) should be included
Sets reproducible code}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_code"></a>}}
\if{latex}{\out{\hypertarget{method-set_code}{}}}
\subsection{Method \code{set_code()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDataset$set_code(code)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{code}}{(\code{character}) Code to mutate the dataset. Must contain the
\code{dataset$dataname}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-check"></a>}}
\if{latex}{\out{\hypertarget{method-check}{}}}
\subsection{Method \code{check()}}{
Check to determine if the raw data is reproducible from the \code{get_code()} code.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDataset$check()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TRUE} if the dataset generated from evaluating the
  \code{get_code()} code is identical to the raw data, else \code{FALSE}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDataset$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
