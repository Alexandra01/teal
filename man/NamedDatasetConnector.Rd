% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NamedDatasetConnector.R
\name{NamedDatasetConnector}
\alias{NamedDatasetConnector}
\title{A \code{NamedDatasetConnector} class of objects}
\description{
A \code{NamedDatasetConnector} class of objects

A \code{NamedDatasetConnector} class of objects
}
\details{
Objects of this class store the connection function to fetch a single dataset.
Note that for some specific connection types (e.g. \code{RICE} or \code{SAICE}),
an object of class \code{DataConnection} must be provided.
Data can be pulled via the \code{pull} method and accessed directly
through the \code{dataset} active binding.
Pulled data inherits from the class \link{NamedDataset}.
}
\section{Super class}{
\code{\link[teal:RawDatasetConnector]{teal::RawDatasetConnector}} -> \code{NamedDatasetConnector}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{NamedDatasetConnector$new()}}
\item \href{#method-get_dataname}{\code{NamedDatasetConnector$get_dataname()}}
\item \href{#method-get_dataset}{\code{NamedDatasetConnector$get_dataset()}}
\item \href{#method-get_datanames}{\code{NamedDatasetConnector$get_datanames()}}
\item \href{#method-get_dataset_label}{\code{NamedDatasetConnector$get_dataset_label()}}
\item \href{#method-set_dataset_label}{\code{NamedDatasetConnector$set_dataset_label()}}
\item \href{#method-get_code_class}{\code{NamedDatasetConnector$get_code_class()}}
\item \href{#method-mutate}{\code{NamedDatasetConnector$mutate()}}
\item \href{#method-pull}{\code{NamedDatasetConnector$pull()}}
\item \href{#method-get_pull_args}{\code{NamedDatasetConnector$get_pull_args()}}
\item \href{#method-check}{\code{NamedDatasetConnector$check()}}
\item \href{#method-clone}{\code{NamedDatasetConnector$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDatasetConnector" data-id="get_code">}\href{../../teal/html/RawDatasetConnector.html#method-get_code}{\code{teal::RawDatasetConnector$get_code()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDatasetConnector" data-id="get_error_message">}\href{../../teal/html/RawDatasetConnector.html#method-get_error_message}{\code{teal::RawDatasetConnector$get_error_message()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDatasetConnector" data-id="get_pull_fun">}\href{../../teal/html/RawDatasetConnector.html#method-get_pull_fun}{\code{teal::RawDatasetConnector$get_pull_fun()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDatasetConnector" data-id="get_raw_data">}\href{../../teal/html/RawDatasetConnector.html#method-get_raw_data}{\code{teal::RawDatasetConnector$get_raw_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDatasetConnector" data-id="get_server">}\href{../../teal/html/RawDatasetConnector.html#method-get_server}{\code{teal::RawDatasetConnector$get_server()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDatasetConnector" data-id="get_ui">}\href{../../teal/html/RawDatasetConnector.html#method-get_ui}{\code{teal::RawDatasetConnector$get_ui()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDatasetConnector" data-id="is_failed">}\href{../../teal/html/RawDatasetConnector.html#method-is_failed}{\code{teal::RawDatasetConnector$is_failed()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDatasetConnector" data-id="is_pulled">}\href{../../teal/html/RawDatasetConnector.html#method-is_pulled}{\code{teal::RawDatasetConnector$is_pulled()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDatasetConnector" data-id="launch">}\href{../../teal/html/RawDatasetConnector.html#method-launch}{\code{teal::RawDatasetConnector$launch()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDatasetConnector" data-id="set_args">}\href{../../teal/html/RawDatasetConnector.html#method-set_args}{\code{teal::RawDatasetConnector$set_args()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDatasetConnector" data-id="set_ui_input">}\href{../../teal/html/RawDatasetConnector.html#method-set_ui_input}{\code{teal::RawDatasetConnector$set_ui_input()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new \code{NamedDatasetConnector} object. Set the pulling function
load the data. \code{dataname} will be used as name
of object to be assigned.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDatasetConnector$new(
  dataname,
  pull_fun,
  code = character(0),
  label = character(0),
  vars = list()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character})\cr
A given name for the dataset, it may not contain spaces.}

\item{\code{pull_fun}}{(\code{CallableFunction})\cr
function to load the data, must return a \code{data.frame}.}

\item{\code{code}}{(\code{character})\cr
A character string defining code to modify \code{raw_data} from this dataset. To modify
current dataset code should contain at least one assignment to object defined in \code{dataname}
argument. For example if \code{dataname = ADSL} example code should contain
\code{ADSL <- <some modification code>}.}

\item{\code{label}}{(\code{character})\cr
Label to describe the dataset.}

\item{\code{vars}}{(list)\cr
In case when this object code depends on the \code{raw_data} from the other
\code{NamedDataset}, \code{NamedDatasetConnector} object(s) or other constant value,
this/these object(s) should be included.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
new \code{NamedDatasetConnector} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_dataname"></a>}}
\if{latex}{\out{\hypertarget{method-get_dataname}{}}}
\subsection{Method \code{get_dataname()}}{
Get dataname of dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDatasetConnector$get_dataname()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
dataname of the dataset
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_dataset"></a>}}
\if{latex}{\out{\hypertarget{method-get_dataset}{}}}
\subsection{Method \code{get_dataset()}}{
Get dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDatasetConnector$get_dataset()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
dataset (\code{<...>Dataset})
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_datanames"></a>}}
\if{latex}{\out{\hypertarget{method-get_datanames}{}}}
\subsection{Method \code{get_datanames()}}{
Get dataname of dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDatasetConnector$get_datanames()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character} dataname of the dataset
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_dataset_label"></a>}}
\if{latex}{\out{\hypertarget{method-get_dataset_label}{}}}
\subsection{Method \code{get_dataset_label()}}{
Get label of dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDatasetConnector$get_dataset_label()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character} dataset label
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_dataset_label"></a>}}
\if{latex}{\out{\hypertarget{method-set_dataset_label}{}}}
\subsection{Method \code{set_dataset_label()}}{
Set label of the \code{dataset} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDatasetConnector$set_dataset_label(label)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{label}}{(\code{character})\cr
Label to describe the dataset}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{self} invisibly for chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_code_class"></a>}}
\if{latex}{\out{\hypertarget{method-get_code_class}{}}}
\subsection{Method \code{get_code_class()}}{
Get internal \code{CodeClass} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDatasetConnector$get_code_class()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{CodeClass}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mutate"></a>}}
\if{latex}{\out{\hypertarget{method-mutate}{}}}
\subsection{Method \code{mutate()}}{
Mutate dataset by code

Either code or script must be provided, but not both.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDatasetConnector$mutate(code, vars = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{code}}{(\code{character}) Code to mutate the dataset. Must contain the
\code{dataset$dataname}}

\item{\code{vars}}{(list)\cr
In case when this object code depends on the \code{raw_data} from the other
\code{RelationalDataset}, \code{RelationalDatasetConnector} object(s) or other constant value,
this/these object(s) should be included}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{self} invisibly for chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-pull"></a>}}
\if{latex}{\out{\hypertarget{method-pull}{}}}
\subsection{Method \code{pull()}}{
Pull the data

Read or create the data using \code{pull_fun} specified in the constructor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDatasetConnector$pull(args = NULL, try = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{args}}{(\code{NULL} or named \code{list})\cr
additional dynamic arguments for pull function. \code{args} can be omitted if \code{pull_fun}
from constructor already contains all necessary arguments to pull data. One can try
to execute \code{pull_fun} directly by \code{x$pull_fun$run()} or to get code using
\code{x$pull_fun$get_code()}. \code{args} specified in pull are used temporary to get data but
not saved in code.}

\item{\code{try}}{(\code{logical} value)\cr
whether perform function evaluation inside \code{try} clause}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{self} invisibly for chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_pull_args"></a>}}
\if{latex}{\out{\hypertarget{method-get_pull_args}{}}}
\subsection{Method \code{get_pull_args()}}{
Derive the arguments this connector will pull with
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDatasetConnector$get_pull_args()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{list} of pull function fixed arguments
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-check"></a>}}
\if{latex}{\out{\hypertarget{method-check}{}}}
\subsection{Method \code{check()}}{
Check to determine if the raw data is reproducible from the
  \code{get_code()} code.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDatasetConnector$check()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TRUE} always for all connectors to avoid evaluating the same code multiple times.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NamedDatasetConnector$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
