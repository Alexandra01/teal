% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RelationalDataCollection.R
\name{RelationalDataCollection}
\alias{RelationalDataCollection}
\title{\code{RelationalDataCollection} class}
\description{
Abstract class containing code for handling set of datasets.
This cannot be created directly. Use either \code{RelationalDataConnector}
(for a set of datasets to be pulled from an external source) or \code{RelationalData}
(for a set of datasets to be passed into a teal application)
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{RelationalDataCollection$new()}}
\item \href{#method-check}{\code{RelationalDataCollection$check()}}
\item \href{#method-get_check_result}{\code{RelationalDataCollection$get_check_result()}}
\item \href{#method-get_code}{\code{RelationalDataCollection$get_code()}}
\item \href{#method-get_code_class}{\code{RelationalDataCollection$get_code_class()}}
\item \href{#method-get_datanames}{\code{RelationalDataCollection$get_datanames()}}
\item \href{#method-get_dataset}{\code{RelationalDataCollection$get_dataset()}}
\item \href{#method-get_datasets}{\code{RelationalDataCollection$get_datasets()}}
\item \href{#method-get_items}{\code{RelationalDataCollection$get_items()}}
\item \href{#method-is_pulled}{\code{RelationalDataCollection$is_pulled()}}
\item \href{#method-mutate}{\code{RelationalDataCollection$mutate()}}
\item \href{#method-mutate_dataset}{\code{RelationalDataCollection$mutate_dataset()}}
\item \href{#method-set_check}{\code{RelationalDataCollection$set_check()}}
\item \href{#method-set_pull_code}{\code{RelationalDataCollection$set_pull_code()}}
\item \href{#method-clone}{\code{RelationalDataCollection$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Cannot create a \code{RelationalDataCollection} object
Create a \code{RelationalData} or \cr
\code{RelationalDataConnector} object instead
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataCollection$new()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
throws error
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-check"></a>}}
\if{latex}{\out{\hypertarget{method-check}{}}}
\subsection{Method \code{check()}}{
Check if the object raw data is reproducible from the \code{get_code()} code.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataCollection$check()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{NULL} if check step has been disabled
  \code{TRUE} if all the datasets generated from evaluating the
  \code{get_code()} code are identical to the raw data, else \code{FALSE}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_check_result"></a>}}
\if{latex}{\out{\hypertarget{method-get_check_result}{}}}
\subsection{Method \code{get_check_result()}}{
Get result of reproducibility check
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataCollection$get_check_result()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{NULL} if check has not been called yet, \code{TRUE} / \code{FALSE} otherwise
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_code"></a>}}
\if{latex}{\out{\hypertarget{method-get_code}{}}}
\subsection{Method \code{get_code()}}{
Get code for all datasets.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataCollection$get_code(dataname = NULL, deparse = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character}) dataname or \code{NULL} for all datasets}

\item{\code{deparse}}{(\code{logical}) whether to return the deparsed form of a call}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(\code{character}) vector of code to generate datasets.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_code_class"></a>}}
\if{latex}{\out{\hypertarget{method-get_code_class}{}}}
\subsection{Method \code{get_code_class()}}{
Get internal \code{CodeClass} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataCollection$get_code_class(only_pull = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{only_pull}}{(\code{logical} value)\cr
if \code{TRUE} only code to pull datasets will be returned without mutate code.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{CodeClass}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_datanames"></a>}}
\if{latex}{\out{\hypertarget{method-get_datanames}{}}}
\subsection{Method \code{get_datanames()}}{
Get names of the datasets.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataCollection$get_datanames()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character} vector with names of all datasets.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_dataset"></a>}}
\if{latex}{\out{\hypertarget{method-get_dataset}{}}}
\subsection{Method \code{get_dataset()}}{
Get \code{RelationalDataset} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataCollection$get_dataset(dataname = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character} value)\cr
name of dataset to be returned. If \code{NULL}, all datasets are returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{RelationalDataset}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_datasets"></a>}}
\if{latex}{\out{\hypertarget{method-get_datasets}{}}}
\subsection{Method \code{get_datasets()}}{
Get \code{list} of \code{RelationalDataset} objects.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataCollection$get_datasets()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{list} of \code{RelationalDataset}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_items"></a>}}
\if{latex}{\out{\hypertarget{method-get_items}{}}}
\subsection{Method \code{get_items()}}{
Get all datasets and all dataset connectors
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataCollection$get_items(dataname = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character} value)\cr
name of dataset connector to be returned. If \code{NULL}, all connectors are returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{list} with all datasets and all connectors
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-is_pulled"></a>}}
\if{latex}{\out{\hypertarget{method-is_pulled}{}}}
\subsection{Method \code{is_pulled()}}{
Check if dataset has already been pulled.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataCollection$is_pulled()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TRUE} if dataset has been already pulled, else \code{FALSE}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mutate"></a>}}
\if{latex}{\out{\hypertarget{method-mutate}{}}}
\subsection{Method \code{mutate()}}{
Mutate data by code
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataCollection$mutate(code, vars = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{code}}{(\code{character}) Code to mutate the dataset. Must contain the
\code{dataset$dataname}}

\item{\code{vars}}{(list)\cr
In case when this object code depends on the \code{raw_data} from the other
\code{RelationalDataset}, \code{RelationalDatasetConnector} object(s) or other constant value,
this/these object(s) should be included}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
self invisibly for chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mutate_dataset"></a>}}
\if{latex}{\out{\hypertarget{method-mutate_dataset}{}}}
\subsection{Method \code{mutate_dataset()}}{
Mutate dataset by code
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataCollection$mutate_dataset(dataname, code, vars = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character}) Dataname to be mutated}

\item{\code{code}}{(\code{character}) Code to mutate the dataset. Must contain the
\code{dataset$dataname}}

\item{\code{vars}}{(list)\cr
In case when this object code depends on the \code{raw_data} from the other
\code{RelationalDataset}, \code{RelationalDatasetConnector} object(s) or other constant value,
this/these object(s) should be included}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
self invisibly for chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_check"></a>}}
\if{latex}{\out{\hypertarget{method-set_check}{}}}
\subsection{Method \code{set_check()}}{
Set reproducibility check
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataCollection$set_check(check = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{check}}{(\code{logical}) whether to perform reproducibility check.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{self} invisibly for chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_pull_code"></a>}}
\if{latex}{\out{\hypertarget{method-set_pull_code}{}}}
\subsection{Method \code{set_pull_code()}}{
Set pull code
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataCollection$set_pull_code(code)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{code}}{(\code{character} value)\cr
code to reproduce \code{data} in \code{RawDataset} objects. Can't be set if any dataset
has \code{code} set already.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{self} invisibly for chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataCollection$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
