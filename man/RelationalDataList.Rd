% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RelationalDataList.R
\name{RelationalDataList}
\alias{RelationalDataList}
\title{Manage multiple \code{RelationalDataConnector} and \code{RelationalDatasetConnector}}
\description{
Class manages  \code{RelationalDataConnector} and \code{RelationalDatasetConnector} objects
and aggregate them in one application. Class also decides whether to launch app
before initialize teal application.
}
\examples{
library(random.cdisc.data)
x <- rcd_cdisc_data( # RelationalDataConnector
  rcd_cdisc_dataset_connector("ADSL", radsl, cached = TRUE),
  rcd_cdisc_dataset_connector("ADLB", radlb, cached = TRUE)
)
x2 <- rcd_cdisc_data( # RelationalDataConnector
  rcd_cdisc_dataset_connector("ADRS", radrs, cached = TRUE)
)

tc <- teal:::RelationalDataList$new(x, x2)
\dontrun{
tc$launch()
tc$get_cdisc_data()
}
}
\section{Super class}{
\code{\link[teal:RelationalData]{teal::RelationalData}} -> \code{RelationalDataList}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{RelationalDataList$new()}}
\item \href{#method-check}{\code{RelationalDataList$check()}}
\item \href{#method-get_datanames}{\code{RelationalDataList$get_datanames()}}
\item \href{#method-get_code}{\code{RelationalDataList$get_code()}}
\item \href{#method-get_ui}{\code{RelationalDataList$get_ui()}}
\item \href{#method-get_dataset_connectors}{\code{RelationalDataList$get_dataset_connectors()}}
\item \href{#method-get_data_connectors}{\code{RelationalDataList$get_data_connectors()}}
\item \href{#method-get_all_datasets}{\code{RelationalDataList$get_all_datasets()}}
\item \href{#method-get_server}{\code{RelationalDataList$get_server()}}
\item \href{#method-is_pulled}{\code{RelationalDataList$is_pulled()}}
\item \href{#method-launch}{\code{RelationalDataList$launch()}}
\item \href{#method-clone}{\code{RelationalDataList$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RelationalData" data-id="get_cdisc_data">}\href{../../teal/html/RelationalData.html#method-get_cdisc_data}{\code{teal::RelationalData$get_cdisc_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RelationalData" data-id="get_dataset">}\href{../../teal/html/RelationalData.html#method-get_dataset}{\code{teal::RelationalData$get_dataset()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RelationalData" data-id="get_datasets">}\href{../../teal/html/RelationalData.html#method-get_datasets}{\code{teal::RelationalData$get_datasets()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RelationalData" data-id="set_code">}\href{../../teal/html/RelationalData.html#method-set_code}{\code{teal::RelationalData$set_code()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$new(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{(\code{RelationalDataConnector}, \code{RelationalDataset},
\code{RelationalDatasetConnector}) object}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-check"></a>}}
\if{latex}{\out{\hypertarget{method-check}{}}}
\subsection{Method \code{check()}}{
Check if the all datasets and connectors raw data is reproducible from the \code{get_code()} code.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$check()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TRUE} if all the items generated from evaluating the
  \code{get_code()} code are identical to the raw data, else \code{FALSE}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_datanames"></a>}}
\if{latex}{\out{\hypertarget{method-get_datanames}{}}}
\subsection{Method \code{get_datanames()}}{
Derive the names of all datasets
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$get_datanames()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character} vector with names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_code"></a>}}
\if{latex}{\out{\hypertarget{method-get_code}{}}}
\subsection{Method \code{get_code()}}{
Derive the code for all datasets
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$get_code(dataname = NULL, deparse = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character}) dataname or \code{NULL} for all datasets}

\item{\code{deparse}}{(\code{logical}) whether to return the deparsed form of a call}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{vector} of \code{character} containing code
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_ui"></a>}}
\if{latex}{\out{\hypertarget{method-get_ui}{}}}
\subsection{Method \code{get_ui()}}{
Get a shiny-module UI to render the necessary app to
derive \code{RelationalDataConnector} object's data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$get_ui(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character}) item ID for the shiny module
Get dataset connectors.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_dataset_connectors"></a>}}
\if{latex}{\out{\hypertarget{method-get_dataset_connectors}{}}}
\subsection{Method \code{get_dataset_connectors()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$get_dataset_connectors()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{list} with all \code{RelationalDatasetConnector} objects.
Get data connectors.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_data_connectors"></a>}}
\if{latex}{\out{\hypertarget{method-get_data_connectors}{}}}
\subsection{Method \code{get_data_connectors()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$get_data_connectors()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{list} with all \code{RelationalDataConnector} objects.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_all_datasets"></a>}}
\if{latex}{\out{\hypertarget{method-get_all_datasets}{}}}
\subsection{Method \code{get_all_datasets()}}{
Get all datasets and all dataset connectors
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$get_all_datasets(dataname = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character} value)\cr
name of dataset connector to be returned. If \code{NULL}, all connectors are returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{list} with all datasets and all connectors
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_server"></a>}}
\if{latex}{\out{\hypertarget{method-get_server}{}}}
\subsection{Method \code{get_server()}}{
Get a shiny-module server to render the necessary app to
derive \code{RelationalDataConnector} object's data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$get_server()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-is_pulled"></a>}}
\if{latex}{\out{\hypertarget{method-is_pulled}{}}}
\subsection{Method \code{is_pulled()}}{
Check if all datasets and connectors have already been pulled.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$is_pulled()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TRUE} if all items have been already pulled, else \code{FALSE}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-launch"></a>}}
\if{latex}{\out{\hypertarget{method-launch}{}}}
\subsection{Method \code{launch()}}{
Launch an app that allows to run the user-interfaces of all
\code{DataConnector} and \code{DatasetConnector} modules

This piece is mainly used for debugging.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$launch()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
