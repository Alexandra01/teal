% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RelationalDataList.R
\name{RelationalDataList}
\alias{RelationalDataList}
\title{Manage multiple \code{RelationalDataConnector} and \code{RelationalDatasetConnector}}
\description{
Class manages  \code{RelationalDataConnector} and \code{RelationalDatasetConnector} objects
and aggregate them in one application. Class also decides whether to launch app
before initialize teal application.
}
\examples{
library(random.cdisc.data)
x <- rcd_data( # RelationalDataConnector
  rcd_cdisc_dataset_connector("ADSL", radsl, cached = TRUE),
  rcd_cdisc_dataset_connector("ADLB", radlb, cached = TRUE)
)
x2 <- rcd_data( # RelationalDataConnector
  rcd_cdisc_dataset_connector("ADRS", radrs, cached = TRUE)
)
x3 <- cdisc_dataset(
  dataname = "ADAE", # RelationalDataset
  data = radae(cached = TRUE),
  code = "library(random.cdisc.data)\nADAE <- radae(cached = TRUE)"
)

x4 <- rcd_cdisc_dataset_connector("ADTTE", radtte, cached = TRUE)
tc <- teal:::RelationalDataList$new(x, x2, x3, x4)
tc$get_datanames()
tc$get_datasets()
tc$get_dataset("ADAE")
tc$get_all_datasets()
tc$get_code()
tc$get_code("ADAE")
\dontrun{
tc$launch()
tc$get_cdisc_data()
tc$get_datasets()
tc$get_dataset("ADAE")
tc$check()
}

library(random.cdisc.data)
x <- cdisc_dataset(
  dataname = "ADSL", # RelationalDataset
  data = radsl(cached = TRUE),
  code = "library(random.cdisc.data)\nADSL <- radsl(cached = TRUE)"
)

x2 <- rcd_cdisc_dataset_connector("ADTTE", radtte, cached = TRUE)
tc <- teal:::RelationalDataList$new(x, x2)
tc$get_datasets()
tc$get_cdisc_data()
\dontrun{
tc$launch()
get_raw_data(tc)
}
}
\section{Super class}{
\code{\link[teal:RelationalData]{teal::RelationalData}} -> \code{RelationalDataList}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{RelationalDataList$new()}}
\item \href{#method-get_datanames}{\code{RelationalDataList$get_datanames()}}
\item \href{#method-get_code}{\code{RelationalDataList$get_code()}}
\item \href{#method-get_ui}{\code{RelationalDataList$get_ui()}}
\item \href{#method-get_dataset_connectors}{\code{RelationalDataList$get_dataset_connectors()}}
\item \href{#method-get_data_connectors}{\code{RelationalDataList$get_data_connectors()}}
\item \href{#method-get_connectors}{\code{RelationalDataList$get_connectors()}}
\item \href{#method-get_dataset}{\code{RelationalDataList$get_dataset()}}
\item \href{#method-get_datasets}{\code{RelationalDataList$get_datasets()}}
\item \href{#method-get_cdisc_data}{\code{RelationalDataList$get_cdisc_data()}}
\item \href{#method-get_all_datasets}{\code{RelationalDataList$get_all_datasets()}}
\item \href{#method-get_server}{\code{RelationalDataList$get_server()}}
\item \href{#method-launch}{\code{RelationalDataList$launch()}}
\item \href{#method-clone}{\code{RelationalDataList$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RelationalData" data-id="check">}\href{../../teal/html/RelationalData.html#method-check}{\code{teal::RelationalData$check()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RelationalData" data-id="is_pulled">}\href{../../teal/html/RelationalData.html#method-is_pulled}{\code{teal::RelationalData$is_pulled()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RelationalData" data-id="set_code">}\href{../../teal/html/RelationalData.html#method-set_code}{\code{teal::RelationalData$set_code()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$new(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{(\code{RelationalDataConnector}, \code{RelationalDataset},
\code{RelationalDatasetConnector}) object}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_datanames"></a>}}
\subsection{Method \code{get_datanames()}}{
Derive the names of all datasets
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$get_datanames()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character} vector with names
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_code"></a>}}
\subsection{Method \code{get_code()}}{
Derive the code for all datasets
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$get_code(dataname = NULL, deparse = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character}) dataname or \code{NULL} for all datasets}

\item{\code{deparse}}{(\code{logical}) whether to return the deparsed form of a call}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{vector} of \code{character} containing code
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_ui"></a>}}
\subsection{Method \code{get_ui()}}{
Get a shiny-module UI to render the necessary app to
derive \code{RelationalDataConnector} object's data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$get_ui(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{(\code{character}) item ID for the shiny module}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the \code{shiny} \code{ui} function
Get dataset connectors.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_dataset_connectors"></a>}}
\subsection{Method \code{get_dataset_connectors()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$get_dataset_connectors()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{list} with all \code{RelationalDatasetConnector} objects.
Get data connectors.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_data_connectors"></a>}}
\subsection{Method \code{get_data_connectors()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$get_data_connectors()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{list} with all \code{RelationalDataConnector} objects.
Get data connectors.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_connectors"></a>}}
\subsection{Method \code{get_connectors()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$get_connectors()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{list} with all \code{RelationalDataConnector} objects.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_dataset"></a>}}
\subsection{Method \code{get_dataset()}}{
Get \code{RelationalDataset} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$get_dataset(dataname = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character} value)\cr
name of dataset to be returned. If \code{NULL}, all datasets are returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{RelationalDataset}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_datasets"></a>}}
\subsection{Method \code{get_datasets()}}{
Get \code{list} of \code{RelationalDataset} objects.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$get_datasets()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{list} of \code{RelationalDataset}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_cdisc_data"></a>}}
\subsection{Method \code{get_cdisc_data()}}{
Get \code{cdisc_data} object from multiple \code{RelationalDataset} objects.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$get_cdisc_data()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{cdisc_data} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_all_datasets"></a>}}
\subsection{Method \code{get_all_datasets()}}{



Get all datasets and all dataset connectors

  name of dataset connector to be returned. If \code{NULL}, all connectors are returned.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$get_all_datasets(dataname = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataname}}{(\code{character} value)\cr}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{list} with all datasets and all connectors
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_server"></a>}}
\subsection{Method \code{get_server()}}{
Get a shiny-module server to render the necessary app to
derive \code{RelationalDataConnector} object's data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$get_server()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{shiny} \code{server} module.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-launch"></a>}}
\subsection{Method \code{launch()}}{
Launch an app that allows to run the user-interfaces of all
\code{DataConnector} and \code{DatasetConnector} modules

This piece is mainly used for debugging.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$launch()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDataList$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
