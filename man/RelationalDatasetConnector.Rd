% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RelationalDatasetConnector.R
\name{RelationalDatasetConnector}
\alias{RelationalDatasetConnector}
\title{A \code{RelationalDatasetConnector} class of objects}
\description{
A \code{RelationalDatasetConnector} class of objects

A \code{RelationalDatasetConnector} class of objects
}
\details{
Objects of this class store the connection function to fetch a single dataset.
Note that for some specific connection types (e.g. \code{RICE} or \code{SAICE}),
an object of class \code{DataConnection} must be provided.
Data can be pulled via the \code{pull} method and accessed directly
through the \code{dataset} active binding.
Pulled data inherits from the class \link{RelationalDataset}.
}
\section{Super classes}{
\code{\link[teal:RawDatasetConnector]{teal::RawDatasetConnector}} -> \code{\link[teal:NamedDatasetConnector]{teal::NamedDatasetConnector}} -> \code{RelationalDatasetConnector}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{RelationalDatasetConnector$new()}}
\item \href{#method-get_dataname}{\code{RelationalDatasetConnector$get_dataname()}}
\item \href{#method-get_datanames}{\code{RelationalDatasetConnector$get_datanames()}}
\item \href{#method-get_keys}{\code{RelationalDatasetConnector$get_keys()}}
\item \href{#method-pull}{\code{RelationalDatasetConnector$pull()}}
\item \href{#method-clone}{\code{RelationalDatasetConnector$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDatasetConnector" data-id="get_dataset">}\href{../../teal/html/RawDatasetConnector.html#method-get_dataset}{\code{teal::RawDatasetConnector$get_dataset()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDatasetConnector" data-id="get_pull_fun">}\href{../../teal/html/RawDatasetConnector.html#method-get_pull_fun}{\code{teal::RawDatasetConnector$get_pull_fun()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDatasetConnector" data-id="get_raw_data">}\href{../../teal/html/RawDatasetConnector.html#method-get_raw_data}{\code{teal::RawDatasetConnector$get_raw_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDatasetConnector" data-id="get_server">}\href{../../teal/html/RawDatasetConnector.html#method-get_server}{\code{teal::RawDatasetConnector$get_server()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDatasetConnector" data-id="get_ui">}\href{../../teal/html/RawDatasetConnector.html#method-get_ui}{\code{teal::RawDatasetConnector$get_ui()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDatasetConnector" data-id="is_pulled">}\href{../../teal/html/RawDatasetConnector.html#method-is_pulled}{\code{teal::RawDatasetConnector$is_pulled()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDatasetConnector" data-id="launch">}\href{../../teal/html/RawDatasetConnector.html#method-launch}{\code{teal::RawDatasetConnector$launch()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDatasetConnector" data-id="set_args">}\href{../../teal/html/RawDatasetConnector.html#method-set_args}{\code{teal::RawDatasetConnector$set_args()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="RawDatasetConnector" data-id="set_ui_input">}\href{../../teal/html/RawDatasetConnector.html#method-set_ui_input}{\code{teal::RawDatasetConnector$set_ui_input()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="NamedDatasetConnector" data-id="check">}\href{../../teal/html/NamedDatasetConnector.html#method-check}{\code{teal::NamedDatasetConnector$check()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="NamedDatasetConnector" data-id="get_code">}\href{../../teal/html/NamedDatasetConnector.html#method-get_code}{\code{teal::NamedDatasetConnector$get_code()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="NamedDatasetConnector" data-id="get_dataname">}\href{../../teal/html/NamedDatasetConnector.html#method-get_dataname}{\code{teal::NamedDatasetConnector$get_dataname()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="NamedDatasetConnector" data-id="get_dataset_label">}\href{../../teal/html/NamedDatasetConnector.html#method-get_dataset_label}{\code{teal::NamedDatasetConnector$get_dataset_label()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="NamedDatasetConnector" data-id="get_pull_args">}\href{../../teal/html/NamedDatasetConnector.html#method-get_pull_args}{\code{teal::NamedDatasetConnector$get_pull_args()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="NamedDatasetConnector" data-id="mutate_dataset">}\href{../../teal/html/NamedDatasetConnector.html#method-mutate_dataset}{\code{teal::NamedDatasetConnector$mutate_dataset()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="teal" data-topic="NamedDatasetConnector" data-id="set_dataset_label">}\href{../../teal/html/NamedDatasetConnector.html#method-set_dataset_label}{\code{teal::NamedDatasetConnector$set_dataset_label()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Create a new \code{RelationalDatasetConnector} object. Set the pulling function
load the data. \code{dataname} will be used as name
of object to be assigned.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDatasetConnector$new(
  pull_fun,
  dataname,
  keys,
  code = character(0),
  label = character(0),
  vars = list()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pull_fun}}{(\code{CallableFunction})\cr
function to load the data, must return a \code{data.frame}.}

\item{\code{dataname}}{(\code{character})\cr
A given name for the dataset, it may not contain spaces}

\item{\code{keys}}{(\code{keys})\cr
object of S3 class \code{keys} containing foreign, primary keys and parent information}

\item{\code{code}}{(\code{character})\cr
A character string defining the code needed to produce the data set in \code{x}}

\item{\code{label}}{(\code{character})\cr
Label to describe the dataset}

\item{\code{vars}}{(list)\cr
In case when this object code depends on the \code{raw_data} from the other
\code{RelationalDataset}, \code{RelationalDatasetConnector} object(s) or other constant value,
this/these object(s) should be included}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
new \code{RelationalDatasetConnector} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_datanames"></a>}}
\if{latex}{\out{\hypertarget{method-get_datanames}{}}}
\subsection{Method \code{get_datanames()}}{
Get dataname of dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDatasetConnector$get_datanames()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
dataname of the dataset
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_keys"></a>}}
\subsection{Method \code{get_keys()}}{
Get keys of dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDatasetConnector$get_keys()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{keys} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-pull"></a>}}
\subsection{Method \code{pull()}}{
Pull the data

Read or create the data using \code{pull_fun} specified in the constructor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDatasetConnector$pull(args = NULL, try = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{args}}{(\code{NULL} or named \code{list})\cr
additional dynamic arguments for pull function. \code{args} can be omitted if \code{pull_fun}
from constructor already contains all necessary arguments to pull data. One can try
to execute \code{pull_fun} directly by \code{x$pull_fun$run()} or to get code using
\code{x$pull_fun$get_code()}. \code{args} specified in pull are used temporary to get data but
not saved in code.}

\item{\code{try}}{(\code{logical} value)\cr
whether perform function evaluation inside \code{try} clause}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{NULL} if successful or \code{try-error} if not.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-is_pulled"></a>}}
\if{latex}{\out{\hypertarget{method-is_pulled}{}}}
\subsection{Method \code{is_pulled()}}{
Check if dataset has already been pulled.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDatasetConnector$is_pulled()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TRUE} if connector has been already pulled, else \code{FALSE}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_pull_args"></a>}}
\if{latex}{\out{\hypertarget{method-get_pull_args}{}}}
\subsection{Method \code{get_pull_args()}}{
Derive the arguments this connector will pull with
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDatasetConnector$get_pull_args()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-check"></a>}}
\if{latex}{\out{\hypertarget{method-check}{}}}
\subsection{Method \code{check()}}{
Check to determine if the raw data is reproducible from the
  \code{get_code()} code.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDatasetConnector$check()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TRUE} if the dataset generated from evaluating the
  \code{get_code()} code is identical to the raw data, else \code{FALSE}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RelationalDatasetConnector$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
