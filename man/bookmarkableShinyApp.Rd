% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/init.R
\name{bookmarkableShinyApp}
\alias{bookmarkableShinyApp}
\title{Make a UI function bookmarkable}
\usage{
bookmarkableShinyApp(ui, server, ...)
}
\arguments{
\item{ui}{\verb{function or shiny.tag} Shiny UI; either a
\code{shiny.tag} or a function with no argument or
one argument (\code{request})}

\item{server}{\code{function} Shiny server function}

\item{...}{additional arguments to \code{shinyApp}}
}
\value{
\code{shinyApp} value
}
\description{
This is a customization of \code{shinyApp}.
}
\details{
To be bookmarkable, the Shiny UI function must have an
argument \code{request}. This function ensures this.

When \code{ui} is a function, it passes the following to \code{shinyApp}
#' ```
app <- teal::init(....)
ui <- app$ui
ui_new <- function(request) {
ui() # or just \code{ui} when ui is a `shiny.tag`
}\preformatted{
If no bookmarking is needed, then you can also call
`shinyApp(ui = app$ui(), server = app$server)`. The reason you cannot
call `shinyApp(ui = app$ui, server = app$server)` without parentheses is
that `app$ui` has an `id` argument with a default value which makes it
possible to be added into modules. `shinyApp` takes this to be the request
argument which is needed for bookmarking. This avoids it.

We guarantee that anything that can be run with `shinyApp` can be replaced
by a call to this function without any changes.
}
}
