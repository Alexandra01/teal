% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/choices_selected.R
\name{choices_selected}
\alias{choices_selected}
\title{Choices function}
\usage{
choices_selected(
  choices,
  selected = if (is(choices, "delayed_data")) NULL else choices[1],
  keep_order = FALSE,
  fixed = FALSE
)
}
\arguments{
\item{choices}{vector of possible choices}

\item{selected}{vector of pre-selected options, first element of \code{choices} if blank}

\item{keep_order}{(\code{logical}) In case of \code{FALSE} the selected variables
will be on top of the drop-down field.}

\item{fixed}{(\code{logical}) (optional) whether to block user to select choices}
}
\value{
Object of class \code{choices_selected} and of type list.
}
\description{
Choices function
}
\details{
Please note that the order of selected will always follow the order of choices. The \code{keep_order}
argument is set to false which will run the following code inside:

\code{choices <- c(selected, setdiff(choices, selected))}

in case you want to keep your specific order of choices, set \code{keep_order} to \code{TRUE}.
}
\examples{

choices_selected(
   choices = setNames(LETTERS[1:5], paste("Letter", LETTERS[1:5])),
   selected = "X"
)

library(random.cdisc.data)
ADSL <- radsl(cached = TRUE)
choices_selected(variable_choices(ADSL), "SEX")

# How to select nothing
# use an empty character
choices_selected(
   choices = c("", "A", "B", "C"),
   selected = ""
)

# How to allow the user to select nothing
# use an empty character
choices_selected(
   choices = c("A", "", "B", "C"),
   selected = "A"
)


# How to make Nothing the Xth choice
# just use keep_order
choices_selected(
   choices = c("A", "", "B", "C"),
   selected = "A",
   keep_order = TRUE
)


# How to give labels to selections
# by adding names - choices will be replaced by "name" in UI, not in code
choices_selected(
   choices = c("name for A" = "A", "Name for nothing" = "", "name for b" = "B", "name for C" = "C"),
   selected = "A"
)

# by using choices_labeled
# labels will be shown behind the choice
choices_selected(
   choices = choices_labeled(c("A", "", "B", "C"),
                             c("name for A", "nothing", "name for B", "name for C")),
   selected = "A"
)

}
