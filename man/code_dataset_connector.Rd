% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RelationalDatasetConnector_constructors.R
\name{code_dataset_connector}
\alias{code_dataset_connector}
\title{Code Dataset Connector}
\usage{
code_dataset_connector(
  dataname,
  code,
  keys,
  mutate_code = character(0),
  mutate_script = character(0),
  label = character(0),
  ...
)
}
\arguments{
\item{dataname}{(\code{character})\cr
A given name for the dataset it may not contain spaces}

\item{code}{(\code{character})\cr
String containing the code to produce the object.
The code must end in a call to the object.}

\item{keys}{(\code{keys})\cr
object of S3 class keys containing foreign, primary keys and parent information}

\item{mutate_code}{(\code{character})\cr
String containing the code used to mutate the object
after it is produced.}

\item{mutate_script}{(\code{character})\cr
Alternatively to \code{mutate_code} - location of the file containing modification code.
Can't be used simultaneously with \code{mutate_script}.}

\item{label}{(\code{character})\cr
Label to describe the dataset.}

\item{...}{(\code{optional})\cr
Additional arguments applied to pull function.
In case when this object code depends on the \code{raw_data} from the other
\code{NamedDataset}, \code{NamedDatasetConnector} object(s) or other constant value,
this/these object(s) should be included. Please note that \code{vars}
are included to this object as local \code{vars} and they cannot be modified
within another dataset.}
}
\description{
\ifelse{html}{\out{<a href='https://www.tidyverse.org/lifecycle/#experimental'><img src='figures/lifecycle-experimental.svg' alt='Experimental lifecycle'></a>}}{\strong{Experimental}}
Create a \code{RelationalDatasetConnector}
from a string of code.
}
\examples{
library(random.cdisc.data)
x <- code_dataset_connector(
  dataname = "ADSL",
  keys = get_cdisc_keys("ADSL"),
  code = "ADSL <- radsl(cached = TRUE); ADSL"
)

x$get_code()

mutate_dataset(x, code = "ADSL$new_variable <- 1")
x$get_code()

file_example <- tempfile(fileext = ".R")
writeLines(
  text = c(
    "seed <- 1; ADSL <- radsl(cached = TRUE, seed = seed)\nADSL"
  ),
  con = file_example
)

y <- code_dataset_connector(
  dataname = "ADSL",
  keys = get_cdisc_keys("ADSL"),
  code = paste0(readLines(file_example), collapse = "\n")
)

}
