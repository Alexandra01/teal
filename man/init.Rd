% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/init.R
\name{init}
\alias{init}
\title{Create the Server and Ui Function for the Shiny App}
\usage{
init(data, tabs, filter = NULL, header = tags$p("title here"),
  footer = tags$p("footer here"))
}
\arguments{
\item{data}{named list with datasets. Dataset names are case sensitive. The
`ASL` data is mandatory.}

\item{filter}{filter settings. Nested named list, currently with \code{init}
list element.}

\item{header}{object of class `shiny.tag` to be used as the header of the app}

\item{footer}{object of class `shiny.tag` to be used as the footer of the app}

\item{analysis}{nested list with one list per analysis item with the
following named list elements: \tabular{ll}{ name \tab string with name
shown in menu for the analysis item \cr server \tab required, shiny server
module function, see \code{\link[shiny]{callModule}} for more
information\cr ui \tab required, shiny ui module function, see
\code{\link[shiny]{callModule}} for more information\cr data \tab required,
vector with datasets names that are passed on (filtered) to the server
function\cr options \tab optional, other arguments passed on to the server
function }}

\item{elements}{list with lists defining new pages (as for analysis) or one
of the keywords \code{data_table}, \code{variable_browser},
\code{analysis}.}
}
\value{
named list with server and ui function
}
\description{
Creates the server and ui part for a teal shiny app
}
\examples{
\dontrun{
ASL <- generate_sample_data('ASL')
ARS <- generate_sample_data('ARS')
ATE <- generate_sample_data('ATE')

x <- teal::init(
  data =  list(ASL = ASL, ARS = ARS, ATE = ATE),
  tabs = tabs(
    tab_item(
      "data source",
      server = function(input, output, session, datasets) {},
      ui = function(id) div(p("data source")),
      filters = NULL,
      server_args = list(datasets = "teal_datasets")
    ),
    data_table_item(),
    variable_browser_item(),
    tabs_item(
      "analysis items",
      tabs = tabs(
        tab_item(
          "spaghetti plot",
          server = function(input, output, session, datasets) {},
          ui = function(id) div(p("spaghetti plot")),
          filters = 'ARS',
          server_args = list(datasets = "teal_datasets")
        ),
        tab_item(
          "survival curves",
          server = function(input, output, session) {},
          ui = function(id) div(p("Kaplan Meier Curve")),
          filters = "ATE"
        )
      )
    )
  ),
  header = tags$h1("Sample App"),
  footer = tags$p("Copyright 2017")
)

shinyApp(x$ui, x$server)

}
}
