% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/init.R
\name{init}
\alias{init}
\title{Create the Server and Ui Function for the Shiny App}
\usage{
init(data, modules, filter = NULL, header = tags$p("title here"),
  footer = tags$p("footer here"))
}
\arguments{
\item{data}{named list with datasets. Dataset names are case sensitive. The
`ASL` data is mandatory.}

\item{modules}{nested list with one list per module with the
following named list elements: \tabular{ll}{ name \tab string with name
shown in menu for the analysis item \cr server \tab required, shiny server
module function, see \code{\link[shiny]{callModule}} for more
information\cr ui \tab required, shiny ui module function, see
\code{\link[shiny]{callModule}} for more information\cr data \tab required,
vector with datasets names that are passed on (filtered) to the server
function\cr options \tab optional, other arguments passed on to the server
function }}

\item{filter}{filter settings. Nested named list, currently with \code{init}
list element.}

\item{header}{object of class `shiny.tag` to be used as the header of the app}

\item{footer}{object of class `shiny.tag` to be used as the footer of the app}
}
\value{
named list with server and ui function
}
\description{
Creates the server and ui part for a teal shiny app
}
\examples{
library(teal.modules.general)
library(random.cdisc.data)

ASL <- radsl(seed = 1)
ARS <- radrs(ASL, seed = 100)
ATE <- radtte(ASL, seed = 1000)

app <- init(
  data = list(ASL = ASL, ARS = ARS, ATE = ATE),
  modules = root_modules(
    module(
      "data source",
      server = function(input, output, session, datasets) {},
      ui = function(id) div(p("information about data source")),
      filters = NULL
    ),
    tm_data_table(),
    tm_variable_browser(),
    modules(
      label = "analysis items",
      tm_table(
        label = "demographic table",
        dataname = "ASL",
        xvar = list(data_extract_spec(
          "ASL",
          columns = columns_spec(
            choices = "SEX",
            selected = "SEX",
            multiple = FALSE
          )
        )),
        yvar = list(data_extract_spec(
          "ASL",
          columns = columns_spec(
            choices = c("RACE", "BMRKR2", "COUNTRY"),
            selected = "RACE",
            multiple = FALSE
          )
        ))
      ),
      tm_scatterplot(
        label = "scatterplot",
        dataname = "ASL",
        xvar = "AGE",
        yvar = "BMRKR1",
        color_by = "_none_",
        color_by_choices = c("_none_", "STUDYID")
      ),
      # ad-hoc module
      module(
        label = "survival curves",
        server = function(input, output, session, datasets) {},
        ui = function(id) div(p("Kaplan Meier Curve")),
        filters = "ATE"
      )
    )
  ),
  header = tags$h1("Sample App"),
  footer = tags$p("Copyright 2017")
)

\dontrun{
shinyApp(app$ui, app$server)
}
}
