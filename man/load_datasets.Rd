% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load_data.R
\name{load_datasets}
\alias{load_datasets}
\alias{load_datasets.RawDataset}
\alias{load_datasets.RawDatasetConnector}
\alias{load_datasets.RelationalData}
\alias{load_datasets.RelationalDataConnector}
\alias{load_datasets.RelationalDataList}
\title{Load datasets}
\usage{
load_datasets(x, ...)

\method{load_datasets}{RawDataset}(x, ...)

\method{load_datasets}{RawDatasetConnector}(x, args = NULL, try = FALSE, ...)

\method{load_datasets}{RelationalData}(x, ...)

\method{load_datasets}{RelationalDataConnector}(x, ...)

\method{load_datasets}{RelationalDataList}(x, ...)
}
\arguments{
\item{x}{(\code{object} of class \code{\link{RelationalData}}, \code{\link{RawDataset}} or
\code{\link{RawDatasetConnector}})}

\item{...}{(not used)\cr
only for support of S3}

\item{args}{(\code{NULL} or named \code{list})\cr
additional dynamic arguments passed to function which loads the data. Applicable only on
\code{\link{RawDatasetConnector}})}

\item{try}{(\code{logical})\cr
whether perform function evaluation inside \code{try} clause. Applicable only on
\code{\link{RawDatasetConnector}})}
}
\value{
If executed in the interactive session shiny app is opened to load the data. If executed in
 shiny application - it returns shiny server module.
}
\description{
Load datasets
}
\examples{

# RawDataset ------
library(random.cdisc.data)
ADSL <- radsl(cached = TRUE)
ADSL_dataset <- raw_dataset(x = ADSL)

load_datasets(ADSL_dataset)

# RawDatasetConnector ------
library(random.cdisc.data)
adsl <- rcd_cdisc_dataset_connector("ADSL", fun = radsl, cached = TRUE)
load_datasets(adsl)
get_dataset(adsl)

adrs <- rcd_cdisc_dataset_connector("ADRS", fun = radrs, ADSL = adsl)
load_datasets(adrs)

# RelationalData ------
library(random.cdisc.data)
adsl <- cdisc_dataset(dataname = "ADSL", # RelationalDataset
                      data = radsl(cached = TRUE),
                      code = "library(random.cdisc.data)\nADSL <- radsl(cached = TRUE)")

adtte <- cdisc_dataset(dataname = "ADTTE", # RelationalDataset
                       data = radtte(cached = TRUE),
                       code = "library(random.cdisc.data)\nADTTE <- radtte(cached = TRUE)")

rd <- teal:::RelationalData$new(adsl, adtte)

\dontrun{
# return a warning
load_datasets(rd)
}

# RelationalDataConnector --------
library(random.cdisc.data)
adsl <- rcd_cdisc_dataset_connector(dataname = "ADSL", fun = radsl, cached = TRUE)
adrs <- rcd_cdisc_dataset_connector(dataname = "ADRS", fun = radrs, ADSL = adsl)

rdc <- rcd_data(adsl, adrs)

\dontrun{
load_datasets(rdc)
}

# RelationalDataList --------
library(random.cdisc.data)
adsl <- rcd_cdisc_dataset_connector(dataname = "ADSL", fun = radsl, cached = TRUE)
adlb <- rcd_cdisc_dataset_connector(dataname = "ADLB", fun = radlb, cached = TRUE)
adrs <- rcd_cdisc_dataset_connector("ADRS", radrs, ADSL = adsl)

tc <- cdisc_data(
  rcd_data(adsl, adlb),
  rcd_data(adrs)
)

\dontrun{
load_datasets(tc)
}
}
