% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mutate_dataset.R
\name{mutate_dataset}
\alias{mutate_dataset}
\alias{mutate_dataset.Dataset}
\alias{mutate_dataset.DatasetConnector}
\alias{mutate_dataset.DataAbstract}
\title{Mutate dataset by code}
\usage{
mutate_dataset(x, ...)

\method{mutate_dataset}{Dataset}(
  x,
  code = character(0),
  script = character(0),
  vars = list(),
  keys = get_keys(x),
  ...
)

\method{mutate_dataset}{DatasetConnector}(
  x,
  code = character(0),
  script = character(0),
  vars = list(),
  keys = get_keys(x),
  ...
)

\method{mutate_dataset}{DataAbstract}(
  x,
  dataname,
  code = character(0),
  script = character(0),
  vars = list(),
  keys = get_keys(x$get_items(dataname)),
  ...
)
}
\arguments{
\item{x}{(\code{Dataset})\cr
object.}

\item{...}{not used, only for support of S3}

\item{code}{(\code{character})\cr
Code to mutate the dataset. Must contain the \code{dataset$dataname}. Or can also be an object
of class \code{PythonCodeClass} returned by \code{\link{python_code}}.}

\item{script}{(\code{character})\cr
file that contains R Code that can be read using \code{\link{read_script}}.
Preferred before \code{code} argument.}

\item{vars}{(list)\cr
In case when this object code depends on the \code{raw_data} from the other
\code{Dataset}, \code{DatasetConnector} object(s) or other constant value,
this/these object(s) should be included.}

\item{keys}{optional, (\code{character})\cr
vector with primary keys}

\item{dataname}{(\code{character})\cr
Dataname to be mutated.}
}
\value{
modified \code{x} object
}
\description{
\ifelse{html}{\out{<a href='https://www.tidyverse.org/lifecycle/#experimental'><img src='figures/lifecycle-experimental.svg' alt='Experimental lifecycle'></a>}}{\strong{Experimental}}
}
\examples{
library(random.cdisc.data)
library(magrittr)

ADSL <- radsl(cached = TRUE)

ADSL_dataset <- dataset(
  dataname = "ADSL",
  x = ADSL,
  label = "AdAM subject-level dataset",
  code = "ADSL <- radsl(cached = TRUE)"
)
ADSL_mutated <- ADSL_dataset \%>\%
  mutate_dataset(code = "ADSL$new_variable <- 1")

ADSL_mutated$get_raw_data()$new_variable[1]

# Use an R script to mutate the data
file_example <- tempfile(fileext = ".R")
writeLines(
  text = c(
    "ADSL <- ADSL \%>\%
      dplyr::mutate(new_variable = new_variable * 2)"
  ),
  con = file_example
)

ADSL_mutated <- ADSL_mutated \%>\%
  mutate_dataset(script = file_example)

ADSL_mutated$get_raw_data()$new_variable[1]

ADSL_mutated <- ADSL_mutated \%>\%
  mutate_dataset(code = read_script(file_example))

ADSL_mutated$get_raw_data()$new_variable[1]

}
