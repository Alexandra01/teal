% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mutate_dataset.R
\name{mutate_dataset}
\alias{mutate_dataset}
\alias{mutate_dataset.NamedDataset}
\alias{mutate_dataset.RelationalDataset}
\alias{mutate_dataset.RelationalDatasetConnector}
\title{Mutate dataset by code}
\usage{
mutate_dataset(x, code = character(0), script = character(0))

\method{mutate_dataset}{NamedDataset}(x, code = character(0), script = character(0))

\method{mutate_dataset}{RelationalDataset}(x, code = character(0), script = character(0))

\method{mutate_dataset}{RelationalDatasetConnector}(x, code = character(0), script = character(0))
}
\arguments{
\item{x}{(\code{NamedDataset})\cr
object}

\item{code}{(\code{character})\cr
Code to mutate the dataset. Must contain the \code{dataset$dataname}}

\item{script}{(\code{character})\cr
file that contains R Code that can be read using \link{read_script}.
Preferred before \code{code} argument}
}
\description{
Mutate dataset by code
}
\examples{
library(random.cdisc.data)
library(magrittr)

ADSL <- radsl(cached = TRUE)

ADSL_dataset <- named_dataset(dataname = "ADSL",
  x = ADSL,
  label = "AdAM subject-level dataset",
  code = "ADSL <- radsl(cached = TRUE)"
)
ADSL_mutated <- ADSL_dataset \%>\%
  mutate_dataset(code = "ADSL$new_variable <- 1")

ADSL_mutated$get_raw_data()$new_variable[1]

# Use an R script to mutate the data
file_example <- tempfile(fileext = ".R")
writeLines(
  text = c(
    "library(dplyr)",
    "ADSL <- ADSL \%>\%
      mutate(new_variable = new_variable * 2)"
  ),
  con = file_example
)

ADSL_mutated <- ADSL_mutated \%>\%
  mutate_dataset(script = file_example)

ADSL_mutated$get_raw_data()$new_variable[1]

ADSL_mutated <- ADSL_mutated \%>\%
  mutate_dataset(code = read_script(file_example))

ADSL_mutated$get_raw_data()$new_variable[1]

}
