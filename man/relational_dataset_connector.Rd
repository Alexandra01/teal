% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RelationalDatasetConnector_constructors.R
\name{relational_dataset_connector}
\alias{relational_dataset_connector}
\alias{relational_dataset_connector_file}
\alias{rcd_dataset_connector}
\alias{rds_dataset_connector}
\alias{script_dataset_connector}
\alias{code_dataset_connector}
\alias{rice_dataset_connector}
\alias{teradata_dataset_connector}
\alias{csv_dataset_connector}
\alias{rds_cdisc_dataset_connector}
\alias{rcd_cdisc_dataset_connector}
\alias{rice_cdisc_dataset_connector}
\alias{script_cdisc_dataset_connector}
\alias{code_cdisc_dataset_connector}
\alias{teradata_cdisc_dataset_connector}
\alias{csv_cdisc_dataset_connector}
\alias{fun_cdisc_dataset_connector}
\title{Create a new \code{RelationalDatasetConnector} object}
\usage{
relational_dataset_connector(
  dataname,
  pull_fun,
  keys,
  code = character(0),
  script = character(0),
  label = character(0),
  vars = list()
)

relational_dataset_connector_file(path)

rcd_dataset_connector(
  dataname,
  fun,
  keys,
  code = character(0),
  script = character(0),
  label = character(0),
  ...
)

rds_dataset_connector(
  dataname,
  file,
  keys,
  code = character(0),
  script = character(0),
  label = character(0),
  ...
)

script_dataset_connector(
  dataname,
  file,
  keys,
  code = character(0),
  script = character(0),
  label = character(0),
  ...
)

code_dataset_connector(
  dataname,
  pull_code,
  keys,
  code = character(0),
  label = character(0),
  ...
)

rice_dataset_connector(
  dataname,
  path,
  keys,
  code = character(0),
  script = character(0),
  label = character(0),
  ...
)

teradata_dataset_connector(
  dataname,
  table,
  keys,
  code = character(0),
  script = character(0),
  label = character(0),
  ...
)

csv_dataset_connector(
  dataname,
  file,
  keys,
  code = character(0),
  script = character(0),
  label = character(0),
  ...
)

rds_cdisc_dataset_connector(
  dataname,
  file,
  code = character(0),
  script = character(0),
  label = character(0),
  ...
)

rcd_cdisc_dataset_connector(
  dataname,
  fun,
  code = character(0),
  script = character(0),
  label = character(0),
  ...
)

rice_cdisc_dataset_connector(
  dataname,
  path,
  code = character(0),
  script = character(0),
  label = character(0),
  ...
)

script_cdisc_dataset_connector(
  dataname,
  file,
  code = character(0),
  script = character(0),
  label = character(0),
  ...
)

code_cdisc_dataset_connector(
  dataname,
  pull_code = character(0),
  code = character(0),
  label = character(0),
  ...
)

teradata_cdisc_dataset_connector(
  dataname,
  table,
  code = character(0),
  script = character(0),
  label = character(0),
  ...
)

csv_cdisc_dataset_connector(
  dataname,
  file,
  code = character(0),
  script = character(0),
  label = character(0),
  ...
)

fun_cdisc_dataset_connector(
  dataname,
  func,
  func_args = NULL,
  label = character(0),
  code = character(0),
  script = character(0),
  keys = get_cdisc_keys(dataname),
  ...
)
}
\arguments{
\item{dataname}{(\code{character})\cr
A given name for the dataset it may not contain spaces}

\item{pull_fun}{(\code{CallableFunction})\cr
function with necessary arguments set to fetch data from connection.}

\item{keys}{(\code{keys})\cr
object of S3 class keys containing foreign, primary keys and parent information}

\item{code}{(\code{character})\cr
A character string defining code to modify \code{raw_data} from this dataset. To modify
current dataset code should contain at least one assignment to object defined in \code{dataname}
argument. For example if \code{dataname = ADSL} example code should contain
\code{ADSL <- <some R code>}. Can't be used simultaneously with \code{script}}

\item{script}{(\code{character})\cr
Alternatively to \code{code} - location of the file containing modification code.
Can't be used simultaneously with \code{script}.}

\item{label}{(\code{character})\cr
Label to describe the dataset.}

\item{vars}{(list)\cr
In case when this object code depends on the \code{raw_data} from the other
\code{NamedDataset}, \code{NamedDatasetConnector} object(s) or other constant value,
this/these object(s) should be included.}

\item{path}{(\code{character})\cr
path to the file}

\item{fun}{(\code{function})\cr
any R function which generates \code{data.frame}, especially functions from
\code{random.cdisc.data} like \code{\link[random.cdisc.data]{radsl}}}

\item{...}{(\code{optional})\cr
additional arguments applied to pull function (\code{readr::read_delim}) by default
\code{delim = ","}.}

\item{file}{(\code{character})\cr
path to (\code{.csv}) (or general delimited) file that contains \code{data.frame} object}

\item{pull_code}{(\code{character})\cr
function call with arguments to obtain dataset.}

\item{table}{(\code{character}) table name}

\item{func}{(\code{function})\cr
function to obtain dataset.}

\item{func_args}{(\code{list})\cr
additional arguments for (\code{func})\cr.}
}
\value{
new \code{RelationalDatasetConnector} object

\code{RelationalDatasetConnector} object
}
\description{
Create \code{RelationalDatasetConnector} from \link{callable_function}.

Please note that the script has to end with a call creating desired object. The error will be raised otherwise.

\code{rcd_dataset_connector} - Create a \code{RelationalDatasetConnector} from any R function.

\code{rds_dataset_connector} - Create a \code{RelationalDatasetConnector} from \code{RDS} file.

\code{script_dataset_connector} - Create a \code{RelationalDatasetConnector} from \code{.R} file.

\code{code_dataset_connector} - Create a \code{RelationalDatasetConnector}
  from a string.

\code{rice_dataset_connector} -
Create a \code{RelationalDatasetConnector} from \code{RICE} dataset.

\code{teradata_dataset_connector} -
Create a \code{RelationalDatasetConnector} from \code{TERADATA} dataset

\code{csv_dataset_connector} - Create a \code{RelationalDatasetConnector} from \code{csv} (or
general delimited file).

\code{rds_cdisc_dataset_connector} -
Create a \code{RelationalDatasetConnector} from \code{RDS} file with keys automatically
assigned by \code{dataname}

\code{rcd_cdisc_dataset_connector} -
Create a \code{DatasetConnector} from any R function with keys assigned automatically
by \code{dataname}.

\code{rice_cdisc_dataset_connector} -
Create a \code{RelationalDatasetConnector} from \code{RICE} dataset with keys assigned
automatically by \code{dataname}.

\code{script_cdisc_dataset_connector} -
Create a \code{RelationalDatasetConnector} from \code{script} file with keys assigned
automatically by \code{dataname}.

\code{code_cdisc_dataset_connector} -
Create a \code{RelationalDatasetConnector} from \code{code} string with keys assigned
automatically by \code{dataname}.

\code{teradata_cdisc_dataset_connector} -
Create a \code{RelationalDatasetConnector} from \code{TERADATA} dataset with keys assigned
automatically by \code{dataname}.

\code{csv_cdisc_dataset_connector} -
Create a \code{RelationalDatasetConnector} from \code{csv} (or general delimited) file
with keys assigned automatically by \code{dataname}.

\code{fun_cdisc_dataset_connector} -
Create a \code{RelationalDatasetConnector} from \code{function} and its arguments
with keys assigned automatically by \code{dataname}.
}
\note{
Do not include assignment in \code{code} argument. \code{code} string
  should be a single function call which returns an object. Use \code{mutate_code}
  to make additional transformations.
}
\examples{
# simple example
file_example <- tempfile(fileext = ".R")
writeLines(
  text = c(
    "library(teal)
     library(random.cdisc.data)

     pull_fun <- callable_function(radsl)
     pull_fun$set_args(list(cached = TRUE))
     relational_dataset_connector(\"ADSL\", pull_fun, get_cdisc_keys(\"ADSL\"))"
  ),
  con = file_example
)
x <- relational_dataset_connector_file(file_example)
get_code(x)
library(random.cdisc.data)
x <- rcd_dataset_connector(
  dataname = "ADSL",
  fun = radsl,
  keys = get_cdisc_keys("ADSL"),
  cached = TRUE
)
x$get_code()
load_dataset(x)
get_dataset(x)
x$get_raw_data()
\dontrun{
x <- rds_dataset_connector(
  dataname = "ADSL",
  file = "path/to/file.RDS",
  keys = get_cdisc_keys("ADSL")
)
x$get_code()
}
\dontrun{
x <- script_dataset_connector(
  dataname = "ADSL",
  file = "path/to/script.R",
  keys = get_cdisc_keys("ADSL")
)
x$get_code()
}
library(random.cdisc.data)
x <- code_dataset_connector(
  dataname = "ADSL",
  keys = get_cdisc_keys("ADSL"),
  pull_code = "radsl(cached = TRUE)"
)

x$get_code()

mutate_dataset(x, code = "ADSL$new_variable <- 1")
x$get_code()
x <- rice_dataset_connector(
  dataname = "ADSL",
  path = "/path/to/file.sas7bdat",
  keys = get_cdisc_keys("ADSL")
)
x$get_code()
\dontrun{
load_dataset(x)
get_dataset(x)
x$get_raw_data()
}
\dontrun{
x <- csv_dataset_connector(
  dataname = "ADSL",
  file = "path/to/file.csv",
  keys = get_cdisc_keys("ADSL"),
  delim = ",",
  col_types = quote(readr::cols(AGE = "i"))
)
x$get_code()
}
\dontrun{
my_data <- function(...) {
  # whatever code
  set.seed(1234)
  library(MASS)
  require(dplyr)
  x <- data.frame(
    STUDYID = 1,
    USUBJID = 1:40,
    z = stats::rnorm(40),
    zz = factor(sample(letters[1:3], 40, replace = TRUE)),
    NAs = rep(NA, 40)
  )
  x$w <- as.numeric(mvrnorm(40, 0, 1))
  x$ww <- as.numeric(mvrnorm(40, 0, 1))
  rtables::var_labels(x) <- c("STUDYID", "USUBJID", "z", "zz", "NAs", "w", "ww")
  x
}
y <- fun_cdisc_dataset_connector(
  dataname = "ADSL",
  func = my_data
)

y$get_code()

y$pull()

get_raw_data(y)
}
# Error as global var is used in the function.
# Thus not reproducible.
\dontrun{
x <- 40
my_data <- function(global_var = x) {
  # whatever code
  set.seed(1234)
  library(MASS)
  x <- data.frame(
    STUDYID = 1,
    USUBJID = 1:global_var,
    z = stats::rnorm(40),
    zz = factor(sample(letters[1:3], 40, replace = TRUE)),
    NAs = rep(NA, 40)
  )
  x$w <- as.numeric(mvrnorm(40, 0, 1))
  x$ww <- as.numeric(mvrnorm(40, 0, 1))
  rtables::var_labels(x) <- c("STUDYID", "USUBJID", "z", "zz", "NAs", "w", "ww")
  x
}
y <- fun_cdisc_dataset_connector(
  dataname = "ADSL",
  func = my_data
)

y$pull()
}
# Error - same as previous one
\dontrun{
global_var <- 40
my_data <- function() {
  # whatever code
  set.seed(1234)
  library(MASS)
  x <- data.frame(
    STUDYID = 1,
    USUBJID = 1:global_var,
    z = stats::rnorm(40),
    zz = factor(sample(letters[1:3], 40, replace = TRUE)),
    NAs = rep(NA, 40)
  )
  x$w <- as.numeric(mvrnorm(40, 0, 1))
  x$ww <- as.numeric(mvrnorm(40, 0, 1))
  rtables::var_labels(x) <- c("STUDYID", "USUBJID", "z", "zz", "NAs", "w", "ww")
  x
}
y <- fun_cdisc_dataset_connector(
  dataname = "ADSL",
  func = my_data
)

y$pull()
}

}
