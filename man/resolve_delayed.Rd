% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resolve_delayed.R
\name{resolve_delayed}
\alias{resolve_delayed}
\title{Resolve delayed inputs by evaluating the code within the provided datasets}
\usage{
resolve_delayed(x, datasets)
}
\arguments{
\item{x}{Object of class \code{delayed_data} to resolve.}

\item{datasets}{Object of class \code{FilteredData} to use for evaluation.}
}
\value{
Resolved object.
}
\description{
Resolve delayed inputs by evaluating the code within the provided datasets
}
\examples{
library(random.cdisc.data)

x <- teal:::FilteredData$new()
isolate({
  x$set_data("ADSL", radsl(cached = TRUE))

  # value_choices example
  v1 <- value_choices("ADSL", "SEX", "SEX")
  v1
  resolve_delayed(v1, x)

  # variable_choices example
  v2 <- variable_choices("ADSL", c("BMRKR1", "BMRKR2"))
  v2
  resolve_delayed(v2, x)

  # data_extract_spec example
  adsl_filter <- filter_spec(
    vars = variable_choices("ADSL", "SEX"),
    sep = "-",
    choices = value_choices("ADSL", "SEX", "SEX"),
    selected = "F",
    multiple = FALSE,
    label = "Choose endpoint and Censor"
  )

  adsl_select <- select_spec(
    label = "Select variable:",
    choices = variable_choices("ADSL", c("BMRKR1", "BMRKR2")),
    selected = "BMRKR1",
    multiple = FALSE,
    fixed = FALSE
  )

  adsl_de <- data_extract_spec(
    dataname = "ADSL",
    select = adsl_select,
    filter = adsl_filter
  )

  resolve_delayed(adsl_filter, x)
  resolve_delayed(adsl_select, x)
  resolve_delayed(adsl_de, x)
})
}
