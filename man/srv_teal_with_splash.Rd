% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/module_teal_with_splash.R
\name{srv_teal_with_splash}
\alias{srv_teal_with_splash}
\title{Server function that loads the data through reactive loading and then delegates
to \verb{\link{srv_teal}}.}
\usage{
srv_teal_with_splash(
  input,
  output,
  session,
  data,
  modules,
  filter_states = list()
)
}
\arguments{
\item{input}{\verb{Shiny input object}}

\item{output}{\verb{Shiny output object}}

\item{session}{\verb{Shiny session object}}

\item{data}{\verb{cdisc_data or DataConnector} object to obtain the data}

\item{modules}{\code{teal_module} or \code{teal_modules} object, the latter
can be used for nested tabs, see \verb{\link{ui_nested_tabs}}}

\item{filter_states}{(\code{list}) You can define filters that show when
the app starts.
The general pattern is:
\code{list(ADSL = list(SEX = ..., AGE = ...), ADAE = ...)}.
An example is:
\code{list(ADSL = list(SEX = c("M", "F")))}.
More generally, the filters for the variable, e.g. \code{SEX} can be
specified as follows:
\code{list(SEX = list(choices = c("M", "F")))},
\code{list(SEX = list(choices = c("M", "F"), keep_na = TRUE))},
or equivalently with:
\code{list(SEX = c("M", "F"))},
\code{list(SEX = c("M", "F", NA))},
or for the default filter state (not very restrictive):
\code{list(SEX = default_filter_state())}

Instead of \code{choices} above, use the following names:
\itemize{
\item \code{numerical}: \code{range}
\item \code{factor}: \code{choices}
\item \code{logical}: \code{logical}
A general example is:
\code{list(   ADSL = list(AGE = default_filter_state(), SEX = c("M", NA)),   ADAE = list(AETOXGR = default_filter_state())   )}
Ignored if the app is restored from a bookmarked state.
}}
}
\value{
\code{reactive}, return value of \verb{\link{srv_teal}}
}
\description{
Please also refer to the doc of \verb{\link{init}}.
}
