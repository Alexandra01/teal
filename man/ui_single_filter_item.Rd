% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/module_single_filter_item.R
\name{ui_single_filter_item}
\alias{ui_single_filter_item}
\title{UI to filter a single filter variable}
\usage{
ui_single_filter_item(id, filter_info, filter_state, prelabel)
}
\arguments{
\item{id}{module id}

\item{filter_info}{\code{filter_info} returned by datasets class}

\item{filter_state}{\code{filter_state} returned by datasets class}

\item{prelabel}{\code{character} label to append before computed label of input}
}
\description{
We pass in the initial state to avoid filtering twice that otherwise comes
with the \code{updateInput} functions.
}
\examples{
library(random.cdisc.data)
library(dplyr)

ADSL <- radsl(cached = TRUE)
attr(ADSL, "keys") <- get_cdisc_keys("ADSL")

datasets <- teal:::FilteredData$new()
isolate({
  datasets$set_data("ADSL", ADSL)
  datasets$set_filter_state("ADSL", varname = NULL, list(
    AGE = list(range = c(33, 44), keep_na = FALSE)
  ))
})

app <- shinyApp(ui = function() {
  tagList(
    teal:::include_teal_css_js(),
    isolate(ui_single_filter_item(
      "var_AGE",
      datasets$get_filter_info("ADSL", "AGE"),
      datasets$get_filter_state("ADSL", "AGE"),
      prelabel = "ADSL.AGE"
    ))
  )
}, server = function(input, output, session) {
  callModule(srv_single_filter_item, "var_AGE", datasets, "ADSL", "AGE")
})

\dontrun{
runApp(app)
}

}
